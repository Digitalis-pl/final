services:
  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/test_data
    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 3
      timeout: 5s

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "python manage.py migrate && yes | python manage.py search_index --rebuild && python manage.py csu && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
      elastic:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env
  elastic:
    container_name: elastic
    restart: always
    image: elasticsearch:7.17.6
    env_file:
      - .env
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
      - ./elastic:/usr/share/elasticsearch/config/hunspell
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep '\"status\":\"green\"' || exit 1" ]
      interval: 10s
      retries: 5
      timeout: 5s



volumes:
  pg_data:
  elastic-data:
    driver: local